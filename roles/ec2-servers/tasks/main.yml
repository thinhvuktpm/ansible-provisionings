- name: Create VPC Subnet private
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    az: "{{ zone }}"      # az is the availability zone
    state: present
    cidr: "{{ subnet_cidr_private_block }}"
    # enable public ip
    resource_tags:
      Name: "{{ subnet_private }}"
  register: subnet_result

- name:  "Provisioning ec2 instance over AWS Cloud"
  ec2_instance:
    image_id: "{{ image_id }}"
    instance_type: "{{ instance_type }}"
    region: "{{ region }}"
    key_name: "{{ key }}"
    wait: yes
    count: 1
    state: present
    vpc_subnet_id: "{{ subnet_result.subnet.id }}"
    network:
      assign_public_ip: false
    security_group: "{{ security_group_results.group_id }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: "{{ item }}"
  loop: "{{ OS_Names }}"
# - name: Get all instance ec2 info
#   amazon.aws.ec2_instance_info:
#     filters:
#       instance-state-name: ["running"]
#       "tag:Name": "bastion"
#   register: instance_info

# - name: Get all instance ec2 info
#   amazon.aws.ec2_instance_info:
#     filters:
#       instance-state-name: ["running"]
#       "tag:Name": "{{ OS_Names }}"
#   register: instance_info

# - name: DEBUG
#   ansible.builtin.debug:
#     msg: public_ip_address {{ item.public_ip_address }}
#   loop: '{{ instance_info.instances }}'
